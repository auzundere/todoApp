{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/todo-list/todo-list.component.html","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/todo-list/todo-list.component.css","./src/app/todo-list/todo-list.component.ts","./src/app/todo.service.ts","./src/app/todo.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<main>\\n  <todo-list></todo-list>\\n</main>\\n\"","module.exports = \"<div class=\\\"todo-content\\\">\\n  <h1 class=\\\"page-title\\\">My Todos</h1>\\n  <div class=\\\"todo-create\\\">\\n    <form #todoForm=\\\"ngForm\\\" (ngSubmit)=\\\"createTodo(todoForm)\\\" novalidate>\\n      <input type=\\\"text\\\" id=\\\"title\\\" class=\\\"form-control\\\" placeholder=\\\"Type a todo and press enter...\\\"\\n             required\\n             name=\\\"title\\\" [(ngModel)]=\\\"newTodo.title\\\"\\n             #title=\\\"ngModel\\\" >\\n      <div *ngIf=\\\"title.errors && title.dirty\\\"\\n           class=\\\"alert alert-danger\\\">\\n        <div [hidden]=\\\"!title.errors.required\\\">\\n          Title is required.\\n        </div>\\n      </div>\\n    </form>\\n  </div>\\n  <ul class=\\\"todo-list\\\">\\n    <li *ngFor=\\\"let todo of todos\\\" [class.completed]=\\\"todo.completed === true\\\" >\\n      <div class=\\\"todo-row\\\" *ngIf=\\\"!editing || editingTodo.id != todo.id\\\">\\n        <a class=\\\"todo-completed\\\" (click)=\\\"toggleCompleted(todo)\\\">\\n          <i class=\\\"material-icons toggle-completed-checkbox\\\"></i>\\n        </a>\\n        <span class=\\\"todo-title\\\">\\n              {{todo.title}}\\n            </span>\\n        <span class=\\\"todo-actions\\\">\\n                <a (click)=\\\"editTodo(todo)\\\">\\n                  <i class=\\\"material-icons edit\\\">edit</i>\\n                </a>\\n                <a (click)=\\\"deleteTodo(todo.id)\\\">\\n                  <i class=\\\"material-icons delete\\\">clear</i>\\n                </a>\\n            </span>\\n      </div>\\n      <div class=\\\"todo-edit\\\" *ngIf=\\\"editing && editingTodo.id === todo.id\\\">\\n        <input class=\\\"form-control\\\" type=\\\"text\\\"\\n               [(ngModel)]=\\\"editingTodo.title\\\" required>\\n        <span class=\\\"edit-actions\\\">\\n                <a (click)=\\\"updateTodo(editingTodo)\\\">\\n                  <i class=\\\"material-icons\\\">done</i>\\n                </a>\\n                <a (click)=\\\"clearEditing()\\\">\\n                  <i class=\\\"material-icons\\\">clear</i>\\n                </a>\\n            </span>\\n      </div>\\n    </li>\\n  </ul>\\n  <div class=\\\"no-todos\\\" *ngIf=\\\"todos && todos.length == 0\\\">\\n    <p>No Todos Found!</p>\\n  </div>\\n</div>\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'angular-frontend';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TodoListComponent } from './todo-list/todo-list.component';\nimport {FormsModule} from \"@angular/forms\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {TodoService} from \"./todo.service\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TodoListComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [TodoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RvZG8tbGlzdC90b2RvLWxpc3QuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport {Todo} from \"../todo\";\nimport {NgForm} from \"@angular/forms\";\nimport {TodoService} from \"../todo.service\";\n\n@Component({\n  selector: 'todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent implements OnInit {\n  todos: Todo[];\n  newTodo: Todo = new Todo();\n  editing: boolean = false;\n  editingTodo: Todo = new Todo();\n\n  constructor(\n    private todoService: TodoService\n  ) {}\n\n  ngOnInit(): void {\n    this.getTodos();\n  }\n\n  getTodos() {\n    this.todoService.getTodos()\n      .then(todos => this.todos = todos);\n  }\n\n  createTodo(todoForm: NgForm): void {\n    this.todoService.createTodo(this.newTodo)\n      .then(createTodo => {\n        todoForm.reset();\n        this.newTodo = new Todo();\n        this.todos.unshift(createTodo);\n      });\n  }\n\n  deleteTodo(id: string): void {\n    this.todoService.deleteTodo(id)\n      .then(() => {\n        this.todos = this.todos.filter(todo => todo.id != id);\n      });\n  }\n\n  updateTodo(todoData: Todo): void {\n    console.log(todoData);\n    this.todoService.updateTodo(todoData)\n      .then(updatedTodo => {\n        let existingTodo = this.todos.find(todo => todo.id === updatedTodo.id);\n        Object.assign(existingTodo, updatedTodo);\n        this.clearEditing();\n      });\n  }\n\n  toggleCompleted(todoData: Todo): void {\n    todoData.completed = !todoData.completed;\n    this.todoService.updateTodo(todoData)\n      .then(updatedTodo => {\n        let existingTodo = this.todos.find(todo => todo.id === updatedTodo.id);\n        Object.assign(existingTodo, updatedTodo);\n      });\n  }\n\n  editTodo(todoData: Todo): void {\n    this.editing = true;\n    Object.assign(this.editingTodo, todoData);\n  }\n\n  clearEditing(): void {\n    this.editingTodo = new Todo();\n    this.editing = false;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Todo} from \"./todo\";\n\n@Injectable()\nexport class TodoService {\n  private baseUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) { }\n\n  getTodos(): Promise<Todo[]> {\n    return this.http.get(this.baseUrl + \"/api/todos\")\n      .toPromise()\n      .then(response => response as Todo[])\n      .catch(this.handleError);\n  }\n\n  createTodo(todoData: Todo): Promise<Todo> {\n    return this.http.post(this.baseUrl + '/api/todos', todoData)\n      .toPromise().then(response => response as Todo)\n      .catch(this.handleError);\n  }\n\n  updateTodo(todoData: Todo): Promise<Todo> {\n    return this.http.put(this.baseUrl + '/api/todos/' + todoData.id, todoData)\n      .toPromise().then(response => response as Todo)\n      .catch(this.handleError);\n  }\n\n  deleteTodo(id: string): Promise<any> {\n    return this.http.delete(this.baseUrl + '/api/todos/'+ id)\n      .toPromise().catch(this.handleError);\n  }\n\n  private handleError(error: any): Promise<any> {\n    console.error('Some error occurred', error);\n    return Promise.reject(error.message || error);\n  }\n}\n","export class Todo {\n  id: string;\n  title: string;\n  completed: boolean;\n  createdAt: Date;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}